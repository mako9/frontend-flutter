// Mocks generated by Mockito 5.3.1 from annotations
// in frontend_flutter/test/mock/mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i12;
import 'dart:typed_data' as _i11;

import 'package:frontend_flutter/model/community.dart' as _i18;
import 'package:frontend_flutter/model/credential.dart' as _i15;
import 'package:frontend_flutter/model/data_page.dart' as _i17;
import 'package:frontend_flutter/model/data_response.dart' as _i2;
import 'package:frontend_flutter/model/http_json_response.dart' as _i4;
import 'package:frontend_flutter/model/item.dart' as _i20;
import 'package:frontend_flutter/model/user.dart' as _i9;
import 'package:frontend_flutter/service/auth/auth_interface.dart' as _i5;
import 'package:frontend_flutter/service/auth_service.dart' as _i13;
import 'package:frontend_flutter/service/community_service.dart' as _i16;
import 'package:frontend_flutter/service/item_service.dart' as _i19;
import 'package:frontend_flutter/service/request_service.dart' as _i14;
import 'package:frontend_flutter/service/storage_service.dart' as _i6;
import 'package:frontend_flutter/service/user_service.dart' as _i8;
import 'package:frontend_flutter/util/http_helper.dart' as _i10;
import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataResponse_0<E> extends _i1.SmartFake
    implements _i2.DataResponse<E> {
  _FakeDataResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_1 extends _i1.SmartFake implements _i3.Client {
  _FakeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpDataResponse_2 extends _i1.SmartFake
    implements _i4.HttpDataResponse {
  _FakeHttpDataResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_4 extends _i1.SmartFake
    implements _i3.StreamedResponse {
  _FakeStreamedResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuth_5 extends _i1.SmartFake implements _i5.Auth {
  _FakeAuth_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i6.StorageService {
  @override
  _i7.Future<void> storeToken(
    _i6.TokenType? tokenType,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #storeToken,
          [
            tokenType,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<String?> readToken(_i6.TokenType? tokenType) =>
      (super.noSuchMethod(
        Invocation.method(
          #readToken,
          [tokenType],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);
  @override
  _i7.Future<void> deleteToken(_i6.TokenType? tokenType) => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [tokenType],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<void> deleteAllSecureData() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllSecureData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<bool> tokenExists(_i6.TokenType? tokenType) => (super.noSuchMethod(
        Invocation.method(
          #tokenExists,
          [tokenType],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i8.UserService {
  @override
  _i7.Future<_i2.DataResponse<_i9.User>> getUser() => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i9.User>>.value(
            _FakeDataResponse_0<_i9.User>(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i2.DataResponse<_i9.User>>.value(
            _FakeDataResponse_0<_i9.User>(
          this,
          Invocation.method(
            #getUser,
            [],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i9.User>>);
  @override
  _i7.Future<_i2.DataResponse<_i9.User>> updateUser(_i9.User? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i9.User>>.value(
            _FakeDataResponse_0<_i9.User>(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i2.DataResponse<_i9.User>>.value(
            _FakeDataResponse_0<_i9.User>(
          this,
          Invocation.method(
            #updateUser,
            [user],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i9.User>>);
}

/// A class which mocks [HttpHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpHelper extends _i1.Mock implements _i10.HttpHelper {
  @override
  _i3.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
        returnValueForMissingStub: _FakeClient_1(
          this,
          Invocation.getter(#client),
        ),
      ) as _i3.Client);
  @override
  set client(_i3.Client? _client) => super.noSuchMethod(
        Invocation.setter(
          #client,
          _client,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i4.HttpDataResponse> request(
    Uri? uri, {
    _i10.HttpMethod? method = _i10.HttpMethod.get,
    _i10.HttpContentType? contentType = _i10.HttpContentType.json,
    _i10.HttpContentType? acceptType = _i10.HttpContentType.json,
    dynamic body,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [uri],
          {
            #method: method,
            #contentType: contentType,
            #acceptType: acceptType,
            #body: body,
            #accessToken: accessToken,
          },
        ),
        returnValue:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #request,
            [uri],
            {
              #method: method,
              #contentType: contentType,
              #acceptType: acceptType,
              #body: body,
              #accessToken: accessToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #request,
            [uri],
            {
              #method: method,
              #contentType: contentType,
              #acceptType: acceptType,
              #body: body,
              #accessToken: accessToken,
            },
          ),
        )),
      ) as _i7.Future<_i4.HttpDataResponse>);
  @override
  _i7.Future<_i4.HttpDataResponse> multipartRequest(
    Uri? uri,
    _i11.Uint8List? bytes,
    String? imageExtension,
    String? accessToken,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #multipartRequest,
          [
            uri,
            bytes,
            imageExtension,
            accessToken,
          ],
        ),
        returnValue:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #multipartRequest,
            [
              uri,
              bytes,
              imageExtension,
              accessToken,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #multipartRequest,
            [
              uri,
              bytes,
              imageExtension,
              accessToken,
            ],
          ),
        )),
      ) as _i7.Future<_i4.HttpDataResponse>);
  @override
  Map<String, String> httpHeaders({
    _i10.HttpContentType? contentType = _i10.HttpContentType.json,
    _i10.HttpContentType? acceptType = _i10.HttpContentType.json,
    String? accessToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpHeaders,
          [],
          {
            #contentType: contentType,
            #acceptType: acceptType,
            #accessToken: accessToken,
          },
        ),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i3.Client {
  @override
  _i7.Future<_i3.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<_i3.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<_i3.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<_i3.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<_i3.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<_i3.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i12.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i3.Response>);
  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(''),
        returnValueForMissingStub: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i11.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
        returnValueForMissingStub:
            _i7.Future<_i11.Uint8List>.value(_i11.Uint8List(0)),
      ) as _i7.Future<_i11.Uint8List>);
  @override
  _i7.Future<_i3.StreamedResponse> send(_i3.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i3.StreamedResponse>.value(_FakeStreamedResponse_4(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i3.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i13.AuthService {
  @override
  _i5.Auth get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeAuth_5(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeAuth_5(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i5.Auth);
  @override
  set auth(_i5.Auth? _auth) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          _auth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<bool> authenticate() => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<String?> refresh() => (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);
  @override
  _i7.Future<bool> isLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #isLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<void> logout() => (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [RequestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestService extends _i1.Mock implements _i14.RequestService {
  @override
  _i7.Future<_i4.HttpDataResponse> request(
    String? path, {
    _i10.HttpMethod? method = _i10.HttpMethod.get,
    dynamic body,
    _i10.HttpContentType? contentType = _i10.HttpContentType.json,
    _i10.HttpContentType? acceptType = _i10.HttpContentType.json,
    Map<String, String>? queryParameters,
    bool? needsAuth = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #method: method,
            #body: body,
            #contentType: contentType,
            #acceptType: acceptType,
            #queryParameters: queryParameters,
            #needsAuth: needsAuth,
          },
        ),
        returnValue:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #method: method,
              #body: body,
              #contentType: contentType,
              #acceptType: acceptType,
              #queryParameters: queryParameters,
              #needsAuth: needsAuth,
            },
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #method: method,
              #body: body,
              #contentType: contentType,
              #acceptType: acceptType,
              #queryParameters: queryParameters,
              #needsAuth: needsAuth,
            },
          ),
        )),
      ) as _i7.Future<_i4.HttpDataResponse>);
  @override
  _i7.Future<_i4.HttpDataResponse> multipartRequest(
    String? path,
    _i11.Uint8List? bytes,
    String? imageExtension,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #multipartRequest,
          [
            path,
            bytes,
            imageExtension,
          ],
        ),
        returnValue:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #multipartRequest,
            [
              path,
              bytes,
              imageExtension,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.HttpDataResponse>.value(_FakeHttpDataResponse_2(
          this,
          Invocation.method(
            #multipartRequest,
            [
              path,
              bytes,
              imageExtension,
            ],
          ),
        )),
      ) as _i7.Future<_i4.HttpDataResponse>);
}

/// A class which mocks [Auth].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuth extends _i1.Mock implements _i5.Auth {
  @override
  _i7.Future<_i15.Credential?> authenticate() => (super.noSuchMethod(
        Invocation.method(
          #authenticate,
          [],
        ),
        returnValue: _i7.Future<_i15.Credential?>.value(),
        returnValueForMissingStub: _i7.Future<_i15.Credential?>.value(),
      ) as _i7.Future<_i15.Credential?>);
  @override
  _i7.Future<_i15.Credential?> refresh(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refresh,
          [refreshToken],
        ),
        returnValue: _i7.Future<_i15.Credential?>.value(),
        returnValueForMissingStub: _i7.Future<_i15.Credential?>.value(),
      ) as _i7.Future<_i15.Credential?>);
  @override
  _i7.Future<void> logout({
    String? idToken,
    String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #logout,
          [],
          {
            #idToken: idToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [CommunityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommunityService extends _i1.Mock implements _i16.CommunityService {
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>> getAllCommunities(
          {int? pageNumber = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllCommunities,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getAllCommunities,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getAllCommunities,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>);
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>> getMyCommunities(
          {int? pageNumber = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyCommunities,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getMyCommunities,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getMyCommunities,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>);
  @override
  _i7.Future<
      _i2.DataResponse<_i17.DataPage<_i18.Community>>> getCommunitiesOwnedByMe(
          {int? pageNumber = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunitiesOwnedByMe,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getCommunitiesOwnedByMe,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i18.Community>>(
          this,
          Invocation.method(
            #getCommunitiesOwnedByMe,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i18.Community>>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> getCommunity(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunity,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #getCommunity,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #getCommunity,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> createCommunity(
          _i18.Community? community) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCommunity,
          [community],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #createCommunity,
            [community],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #createCommunity,
            [community],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> updateCommunity(
          _i18.Community? community) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCommunity,
          [community],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #updateCommunity,
            [community],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #updateCommunity,
            [community],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> deleteCommunity(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCommunity,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #deleteCommunity,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #deleteCommunity,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>> getCommunityMember(
    String? uuid, {
    int? pageNumber = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommunityMember,
          [uuid],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i9.User>>(
          this,
          Invocation.method(
            #getCommunityMember,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i9.User>>(
          this,
          Invocation.method(
            #getCommunityMember,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>);
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>> getRequestingMember(
    String? uuid, {
    int? pageNumber = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRequestingMember,
          [uuid],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i9.User>>(
          this,
          Invocation.method(
            #getRequestingMember,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i9.User>>(
          this,
          Invocation.method(
            #getRequestingMember,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i9.User>>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> joinCommunity(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinCommunity,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #joinCommunity,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #joinCommunity,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<_i18.Community>> leaveCommunity(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #leaveCommunity,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i18.Community>>.value(
            _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #leaveCommunity,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i18.Community>>.value(
                _FakeDataResponse_0<_i18.Community>(
          this,
          Invocation.method(
            #leaveCommunity,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i18.Community>>);
  @override
  _i7.Future<_i2.DataResponse<List<_i9.User>>> approveJoinRequests(
    String? communityUuid,
    List<String>? userUuids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #approveJoinRequests,
          [
            communityUuid,
            userUuids,
          ],
        ),
        returnValue: _i7.Future<_i2.DataResponse<List<_i9.User>>>.value(
            _FakeDataResponse_0<List<_i9.User>>(
          this,
          Invocation.method(
            #approveJoinRequests,
            [
              communityUuid,
              userUuids,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<List<_i9.User>>>.value(
                _FakeDataResponse_0<List<_i9.User>>(
          this,
          Invocation.method(
            #approveJoinRequests,
            [
              communityUuid,
              userUuids,
            ],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<List<_i9.User>>>);
  @override
  _i7.Future<_i2.DataResponse<List<_i9.User>>> declineJoinRequest(
    String? communityUuid,
    List<String>? userUuids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #declineJoinRequest,
          [
            communityUuid,
            userUuids,
          ],
        ),
        returnValue: _i7.Future<_i2.DataResponse<List<_i9.User>>>.value(
            _FakeDataResponse_0<List<_i9.User>>(
          this,
          Invocation.method(
            #declineJoinRequest,
            [
              communityUuid,
              userUuids,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<List<_i9.User>>>.value(
                _FakeDataResponse_0<List<_i9.User>>(
          this,
          Invocation.method(
            #declineJoinRequest,
            [
              communityUuid,
              userUuids,
            ],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<List<_i9.User>>>);
}

/// A class which mocks [ItemService].
///
/// See the documentation for Mockito's code generation for more information.
class MockItemService extends _i1.Mock implements _i19.ItemService {
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>> getAllItemsOfCommunity(
    String? uuid, {
    int? pageNumber = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllItemsOfCommunity,
          [uuid],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getAllItemsOfCommunity,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getAllItemsOfCommunity,
            [uuid],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>);
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>> getMyItems(
          {int? pageNumber = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyItems,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getMyItems,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getMyItems,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>);
  @override
  _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>> getItemsOwnedByMe(
          {int? pageNumber = 0}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemsOwnedByMe,
          [],
          {#pageNumber: pageNumber},
        ),
        returnValue:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getItemsOwnedByMe,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>.value(
                _FakeDataResponse_0<_i17.DataPage<_i20.Item>>(
          this,
          Invocation.method(
            #getItemsOwnedByMe,
            [],
            {#pageNumber: pageNumber},
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i17.DataPage<_i20.Item>>>);
  @override
  _i7.Future<_i2.DataResponse<_i20.Item>> getItem(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItem,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i20.Item>>.value(
            _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #getItem,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i20.Item>>.value(
                _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #getItem,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i20.Item>>);
  @override
  _i7.Future<_i2.DataResponse<_i20.Item>> createItem(_i20.Item? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #createItem,
          [item],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i20.Item>>.value(
            _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #createItem,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i20.Item>>.value(
                _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #createItem,
            [item],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i20.Item>>);
  @override
  _i7.Future<_i2.DataResponse<_i20.Item>> updateItem(_i20.Item? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItem,
          [item],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i20.Item>>.value(
            _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #updateItem,
            [item],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i20.Item>>.value(
                _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #updateItem,
            [item],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i20.Item>>);
  @override
  _i7.Future<_i2.DataResponse<_i20.Item>> deleteItem(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItem,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i20.Item>>.value(
            _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #deleteItem,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i20.Item>>.value(
                _FakeDataResponse_0<_i20.Item>(
          this,
          Invocation.method(
            #deleteItem,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i20.Item>>);
  @override
  _i7.Future<_i2.DataResponse<_i11.Uint8List?>> getItemImage(String? uuid) =>
      (super.noSuchMethod(
        Invocation.method(
          #getItemImage,
          [uuid],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i11.Uint8List?>>.value(
            _FakeDataResponse_0<_i11.Uint8List?>(
          this,
          Invocation.method(
            #getItemImage,
            [uuid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i11.Uint8List?>>.value(
                _FakeDataResponse_0<_i11.Uint8List?>(
          this,
          Invocation.method(
            #getItemImage,
            [uuid],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i11.Uint8List?>>);
  @override
  _i7.Future<_i2.DataResponse<_i11.Uint8List>> uploadItemImage(
    String? uuid,
    _i11.Uint8List? bytes,
    String? imageExtension,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadItemImage,
          [
            uuid,
            bytes,
            imageExtension,
          ],
        ),
        returnValue: _i7.Future<_i2.DataResponse<_i11.Uint8List>>.value(
            _FakeDataResponse_0<_i11.Uint8List>(
          this,
          Invocation.method(
            #uploadItemImage,
            [
              uuid,
              bytes,
              imageExtension,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i2.DataResponse<_i11.Uint8List>>.value(
                _FakeDataResponse_0<_i11.Uint8List>(
          this,
          Invocation.method(
            #uploadItemImage,
            [
              uuid,
              bytes,
              imageExtension,
            ],
          ),
        )),
      ) as _i7.Future<_i2.DataResponse<_i11.Uint8List>>);
}
